name: Build, Push and Deploy to Kubernetes

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    runs-on: self-hosted

    strategy:
      matrix:
        include:
          - name: agenda-api
            path: HackatonFiapNETT6.AgendaMedica.Services.Agenda.API
            secret: agenda-api-secret
          - name: auth-api
            path: HackatonFiapNETT6.AgendaMedica.Services.Auth.API
            secret: auth-api-secret
          - name: cadastro-api
            path: HackatonFiapNETT6.AgendaMedica.Services.Cadastro.API
            secret: cadastro-api-secret
          - name: consulta-api
            path: HackatonFiapNETT6.AgendaMedica.Services.Consulta.API
            secret: consulta-api-secret

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t docker.io/${{ secrets.DOCKER_USERNAME }}/hackatonfiapnett6-${{ matrix.name }}:latest \
            -f ${{ matrix.path }}/Dockerfile ${{ matrix.path }}
          docker push docker.io/${{ secrets.DOCKER_USERNAME }}/hackatonfiapnett6-${{ matrix.name }}:latest

      - name: Gerar kubeconfig local do Minikube
        run: |
          mkdir -p ~/.kube
          minikube update-context

      - name: DiagnÃ³stico do kubeconfig
        run: |
          echo ">> Verificando acesso ao cluster Kubernetes"
          kubectl config current-context
          kubectl cluster-info

      - name: Criar secret da connection string
        run: |
          kubectl delete secret ${{ matrix.secret }} --ignore-not-found=true
          kubectl create secret generic ${{ matrix.secret }} \
            --from-literal=defaultConnection="Server=sqlserver;Database=PLACEHOLDER_DB;User Id=sa;Password=PLACEHOLDER_PASS;TrustServerCertificate=true"

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/${{ matrix.name }}/${{ matrix.name }}-deployment.yaml --validate=false
          kubectl apply -f k8s/${{ matrix.name }}/${{ matrix.name }}-service.yaml
